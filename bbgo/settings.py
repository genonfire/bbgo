"""
Django settings for bbgotest project.

Generated by 'django-admin startproject' using Django 2.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import json
import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
FRONTEND_DIR = os.path.join(BASE_DIR, 'frontend')
TEMPLATES_DIR = os.path.join(FRONTEND_DIR, 'templates')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!

SECRETS_PATH = 'secrets.json'
CONFIG_PATH = 'config.json'


# Load sensitive data from SECRETS_PATH. (secrets.json)
# Do not change below, edit your own secrets.json instead.
# See docs/secrets_sample.json

try:
    secrets = json.loads(open(os.path.join(BASE_DIR, SECRETS_PATH)).read())

    DB_NAME = ''
    DB_USER = ''
    DB_PASSWORD = ''
    EMAIL_USER = ''
    EMAIL_PASSWORD = ''
    EMAIL_ADDRESS = ''
    AWS_ACCESS_KEY_ID = ''
    AWS_SECRET_ACCESS_KEY = ''
    SECRET_KEY = ''
    # DO NOT COMMIT YOUR SECRETS ABOVE INTO PUBLIC REPOSITORY.

    for key, value in secrets.items():
        setattr(sys.modules[__name__], key, value)
except IOError:
    raise IOError('Error while loading %s.' % SECRETS_PATH)


# Default configurations.
# It is highly suggested to override in CONFIG_PATH to change values.
# See docs/config_sample.json

REST_PAGINATION_SIZE_DEFAULT = 20
DJANGO_DEBUG = False
LOCAL_SERVER = False

# Load bbgo configuration from CONFIG_PATH if exist. (config.json)
try:
    config = json.loads(open(os.path.join(BASE_DIR, CONFIG_PATH)).read())
    print("# Override configurations.")

    for key, value in config.items():
        setattr(sys.modules[__name__], key, value)
        print(" %s : %s" % (key, value))
except IOError:
    pass


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = DJANGO_DEBUG
if 'DJANGO_DEBUG' in os.environ:
    if os.environ['DJANGO_DEBUG'] == 'Debug':
        DEBUG = True
        LOCAL_SERVER = True


# Security
# https://docs.djangoproject.com/en/2.2/topics/security/

if not LOCAL_SERVER:
    SESSION_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
    CSRF_COOKIE_SECURE = True

ALLOWED_HOSTS = ['*']


# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
THIRD_PARTY_APPS = [
    'drf_yasg',
    'rest_framework',
    'rest_framework.authtoken',
]
BBGO_APPS = [
]
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + BBGO_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
]

ROOT_URLCONF = 'bbgo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(FRONTEND_DIR),
            os.path.join(TEMPLATES_DIR),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bbgo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
# DB_NAME, DB_USER, DB_PASSWORD should be set in SECRETS_PATH

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Rest framework
# https://github.com/encode/django-rest-framework

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS':
        'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': REST_PAGINATION_SIZE_DEFAULT,
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
]
if LOCAL_SERVER:
    AUTH_PASSWORD_VALIDATORS = []


# Email setting
# https://docs.djangoproject.com/en/2.2/topics/email/
# EMAIL_HOST_USER, EMAIL_HOST_PASSWORD should be set in SECRETS_PATH

EMAIL_HOST_GMAIL = 'smtp.gmail.com'
EMAIL_HOST_AWS = 'email-smtp.us-west-2.amazonaws.com'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST = EMAIL_HOST_GMAIL
EMAIL_HOST_USER = EMAIL_USER
EMAIL_HOST_PASSWORD = EMAIL_PASSWORD
DEFAUL_FROM_EMAIL = EMAIL_ADDRESS


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_DIR = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    STATIC_DIR,
)

# Static files on AWS S3
# https://github.com/jschneier/django-storages
# AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY should be set in SECRETS_PATH

if 'storages' in INSTALLED_APPS and not LOCAL_SERVER:
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    AWS_QUERYSTRING_AUTH = False
    AWS_DEFAULT_ACL = 'public-read'
    AWS_DOMAIN = '.s3.ap-northeast-2.amazonaws.com'
    AWS_STORAGE_BUCKET_NAME = 'bbgomedia'
    AWS_S3_CUSTOM_DOMAIN = AWS_STORAGE_BUCKET_NAME + AWS_DOMAIN
    AWS_QUERYSTRING_AUTH = False
    AWS_DEFAULT_ACL = 'public-read'
    MEDIA_URL = 'https://' + AWS_S3_CUSTOM_DOMAIN + '/'
else:
    MEDIA_URL = '/upload/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'upload')


# Rosetta setting
# https://github.com/mbi/django-rosetta

if 'rosetta' in INSTALLED_APPS:
    ROSETTA_AUTO_COMPILE = True
    ROSETTA_MESSAGES_PER_PAGE = 50
    ROSETTA_SHOW_AT_ADMIN_PANEL = True
